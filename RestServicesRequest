public class RestServicesRequest {

    private static ConsumerApiInterface consumerApiInterface;

    public static ConsumerApiInterface getClient() {
        if (consumerApiInterface == null) {
            HttpLoggingInterceptor logging = new HttpLoggingInterceptor();
            logging.setLevel(HttpLoggingInterceptor.Level.BODY);
            OkHttpClient okClient = new OkHttpClient.Builder().addInterceptor(logging).build();

            Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd'T'HH:mm:ssZ").setLenient().create();

            Retrofit client = new Retrofit.Builder().baseUrl(Utility.BASE_URL).client(okClient).addConverterFactory(GsonConverterFactory.create(gson)).build();
            consumerApiInterface = client.create(ConsumerApiInterface.class);
        }
        return consumerApiInterface;
    }


    public interface ConsumerApiInterface {
        @Headers("Content-Type: application/json")
        @FormUrlEncoded
        @POST("oauth/authorize/?")
        Call<AccessTokenResponse> getAccessToken(@Field("client_id") String client_id,
                                                 @Field("client_secret") String client_secret,
                                                 @Field("redirect_uri") String redirect_uri,
                                                 @Field("grant_type") String response_type,
                                                 @Field("code") String code);

        @Headers("Content-Type: application/json")
        @FormUrlEncoded
        @POST("v1/users/self/media/recent?")
        Call<InstagramRequiestResponse> getImages(@Field("access_token") String access_token);

    }
}
